<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AplicacaoOnlineNecessaria" xml:space="preserve">
    <value>Para essa operação é necessário estar conectado na internet.</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>Curtindo uma Viagem</value>
  </data>
  <data name="Atracao" xml:space="preserve">
    <value>Atração</value>
  </data>
  <data name="AtracaoAberta" xml:space="preserve">
    <value>A atração {0} está sendo visitada, deseja associar a nova atração como filha dela?</value>
  </data>
  <data name="AtracaoVisita" xml:space="preserve">
    <value>Visitando atração {0}</value>
  </data>
  <data name="CampoObrigatorio" xml:space="preserve">
    <value>Favor preencher o campo.</value>
  </data>
  <data name="Cancelar" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="CancelarEdicao" xml:space="preserve">
    <value>Deseja cancelar a edição. Itens não salvos serão perdidos.</value>
  </data>
  <data name="CarroDeslocamento" xml:space="preserve">
    <value>Movendo-se de carro {0}</value>
  </data>
  <data name="CarroDevolucao" xml:space="preserve">
    <value>Devolução do carro {0} para locadora {1}</value>
  </data>
  <data name="CarroReabastecido" xml:space="preserve">
    <value>Reabasteceu carro {0}</value>
  </data>
  <data name="CarroRetirada" xml:space="preserve">
    <value>Retirada do carro {0} na locadora {1}</value>
  </data>
  <data name="CompanhiaTransporte" xml:space="preserve">
    <value>Companhia de Transporte</value>
  </data>
  <data name="ConexaoInternetObrigatoria" xml:space="preserve">
    <value>É necessário estar conectado na internet para executar essa função</value>
  </data>
  <data name="ConfiguracaoSalvaSucesso" xml:space="preserve">
    <value>Configuração Salva com Sucesso</value>
  </data>
  <data name="Confirmacao" xml:space="preserve">
    <value>Confirmação</value>
  </data>
  <data name="Confirmar" xml:space="preserve">
    <value>Confirmar</value>
  </data>
  <data name="Continuar" xml:space="preserve">
    <value>Continuar</value>
  </data>
  <data name="CustoExistente" xml:space="preserve">
    <value>Custo Existente</value>
  </data>
  <data name="DesmarcarSeguido" xml:space="preserve">
    <value>Ao desmarcar essa pessoa você deixará de acompanhar suas viagens. Deseja remover?</value>
  </data>
  <data name="DesmarcarSeguidora" xml:space="preserve">
    <value>Ao desmarcar essa pessoa como seguidora ela deixará de visualizar suas viagens. Deseja desmarcá-la?</value>
  </data>
  <data name="ExcluirAquisicaoMoeda" xml:space="preserve">
    <value>Deseja excluir a aquisição de moeda {0} {1}?</value>
  </data>
  <data name="ExcluirAtracao" xml:space="preserve">
    <value>Deseja excluir a atração {0}?</value>
  </data>
  <data name="ExcluirComentario" xml:space="preserve">
    <value>Deseja excluir o comentário?</value>
  </data>
  <data name="ExcluirCotacao" xml:space="preserve">
    <value>Deseja excluir a cotação de {0} para {1}?</value>
  </data>
  <data name="ExcluirDeslocamento" xml:space="preserve">
    <value>Deseja excluir o deslocamento {0}?</value>
  </data>
  <data name="ExcluirGasto" xml:space="preserve">
    <value>Deseja excluir o gasto {0} de {1}{2}?</value>
  </data>
  <data name="ExcluirHotel" xml:space="preserve">
    <value>Deseja excluir a hospedagem {0}?</value>
  </data>
  <data name="ExcluirRefeição" xml:space="preserve">
    <value>Deseja excluir a refeição {0}?</value>
  </data>
  <data name="ExclusaoSucesso" xml:space="preserve">
    <value>Exclusão realizada com sucesso.</value>
  </data>
  <data name="Foto" xml:space="preserve">
    <value>Foto</value>
  </data>
  <data name="HoraFimMaiorDataInicio" xml:space="preserve">
    <value>A hora final deve ser maior que a data de início.</value>
  </data>
  <data name="Hotel" xml:space="preserve">
    <value>Hotel</value>
  </data>
  <data name="HotelCheckIn" xml:space="preserve">
    <value>Fez check in na hospedagem {0}</value>
  </data>
  <data name="HotelCheckOut" xml:space="preserve">
    <value>Fez check out da hospedagem {0}</value>
  </data>
  <data name="HotelNoHotel" xml:space="preserve">
    <value>Descansando na hospedagem {0}</value>
  </data>
  <data name="Locadora" xml:space="preserve">
    <value>Locadora</value>
  </data>
  <data name="Loja" xml:space="preserve">
    <value>Loja</value>
  </data>
  <data name="LojaCompra" xml:space="preserve">
    <value>Fez compras na loja {0}</value>
  </data>
  <data name="MailInvalido" xml:space="preserve">
    <value>E-mail inválido</value>
  </data>
  <data name="MaiorDataInicio" xml:space="preserve">
    <value>A data deve ser maior que a data início.</value>
  </data>
  <data name="MarcarSeguido" xml:space="preserve">
    <value>Ao marcar essa pessoa será enviada uma solicitação para você visualizar suas viagens. Deseja continuar?</value>
  </data>
  <data name="MarcarSeguidora" xml:space="preserve">
    <value>Ao marcar essa pessoa como seguidora ela poderá visualizar suas viagens. Deseja marcá-la?</value>
  </data>
  <data name="MensagemAutenticacao" xml:space="preserve">
    <value>O acesso foi expirado</value>
  </data>
  <data name="MidiaSalvaSucesso" xml:space="preserve">
    <value>Mídia salva com sucesso.</value>
  </data>
  <data name="Nao" xml:space="preserve">
    <value>Não</value>
  </data>
  <data name="NovoCusto" xml:space="preserve">
    <value>Novo Custo</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="PontoAjustar" xml:space="preserve">
    <value>Qual ponto deseja ajustar?</value>
  </data>
  <data name="PontoFim" xml:space="preserve">
    <value>Fim</value>
  </data>
  <data name="PontoInicio" xml:space="preserve">
    <value>Início</value>
  </data>
  <data name="Problemas" xml:space="preserve">
    <value>Problemas</value>
  </data>
  <data name="RefeicaoAtracaoAberta" xml:space="preserve">
    <value>A atração {0} está em visita, deseja adicionar a refeição como filho desta?</value>
  </data>
  <data name="RefeicaoFazendo" xml:space="preserve">
    <value>Comendo {0} no restaurante {1}</value>
  </data>
  <data name="ReprovarRequisicao" xml:space="preserve">
    <value>Caso seja reprovada a requisição essa pessoa só poderá visualizar suas viagens se fizer uma nova solicitação. Deseja continuar?</value>
  </data>
  <data name="Restaurante" xml:space="preserve">
    <value>Restaurante</value>
  </data>
  <data name="Sim" xml:space="preserve">
    <value>Sim</value>
  </data>
  <data name="Sincronizacao" xml:space="preserve">
    <value>Sincronização</value>
  </data>
  <data name="Sucesso" xml:space="preserve">
    <value>Sucesso</value>
  </data>
  <data name="TipoCustoAdicionar" xml:space="preserve">
    <value>Que custo deseja adicionar?</value>
  </data>
  <data name="TipoMidia" xml:space="preserve">
    <value>Tipo de Mídia</value>
  </data>
  <data name="TrocarViagemSelecionada" xml:space="preserve">
    <value>Deseja trocar a viagem selecionada para a viagem criada?</value>
  </data>
  <data name="ViagemAereaDestino" xml:space="preserve">
    <value>Concluindo deslocamento {0} em {1}</value>
  </data>
  <data name="ViagemAereaEscala" xml:space="preserve">
    <value>Fazendo escala de {0} em {1}</value>
  </data>
  <data name="ViagemAereaOrigem" xml:space="preserve">
    <value>Aguardando inicio do deslocamento {0} em {1}</value>
  </data>
  <data name="ViagemAereaViajando" xml:space="preserve">
    <value>Viajando {0}</value>
  </data>
  <data name="Video" xml:space="preserve">
    <value>Vídeo</value>
  </data>
  <data name="Voltar" xml:space="preserve">
    <value>Voltar</value>
  </data>
</root>